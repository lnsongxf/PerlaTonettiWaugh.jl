Load deps

```python
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import os as os
```

And set constants 

```python
hash = "18262156669967332791" # uniquely identifies a run
fig_path = "figures"
```

Let's load some dataframes 

```python 
df = pd.read_csv("data/" + hash + ".csv") # front-loaded with stationary 
df_welfare = pd.read_csv("data/welfare_results-" + hash + ".csv")
df_autarky = pd.read_csv("data/autarky_results-" + hash + ".csv")
```

The main dataframe is front-loaded with the time-0 stationary solution

```python 
df.head(10)
```

## Welfare Gains from Trade 

```python 
df_welfare.head()
```

This reports the welfare gains. One to the left is the steady state, the one to the right is the transition path. Unlike our previous (wrong) stuff, the amplification is much more modest. Not hugly different.

```python 
ACR_gains = 100*(((df.λ_ii.iloc[-1])/(df.λ_ii.iloc[0]))**(-1 / df_welfare.theta.iloc[0]) - 1)
print("Change in Trade", 1- df.λ_ii.iloc[0], 1- df.λ_ii.iloc[-1])
print("ACR Gains", ACR_gains)
```

This reports the ACR implied gains. Need to verify the fomula, but I think this is correct. 0.2 percent increace in welfare. Our model is saying a 14 percentage point increase in welfare. One thing to think about is our consumption response strictly dwarfs just the ACR number. Then there is the growth effect.

## Autarky Results 

Here are the welfare gains from going to autarky....transition path is not included. But here to address the Ref 2's concerns about "range" of outcomes associated with the model


```python
df_autarky.head()
```

```python
ACR_autarky = 100*(((df.λ_ii.iloc[-1]))**(-1 / df_welfare.theta.iloc[0]) - 1)
# print("Change in Trade", 1- df.λ_ii.iloc[0], 1- df.λ_ii.iloc[-1])
print("Autarky ACR Gains", ACR_autarky )
```

A couple of things about this. One is that the SS-comparision is not that much different than what we had be for. The key issue is that trade is not changing as much, we are starting from a relativly closed economy. This shows up in the comparision to the ACR autarky gains. This numer is small, smaller than the 13 percent in the paper, why? We are starting from a lower level of trade, so the loss from autarky is smaller.

## Plots 

### Real Discount Factor 

```python 
fig, ax = plt.subplots(figsize = (10,7))

ax.plot(df.t, 100*df.r, color = "red", lw = 5,
        label = "Growth Rate", ls = "-")

ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)

ax.set_ylabel("Firms Discount Factor, rho + g_c + delta", fontsize = 14) 
# ax.set_xlim(-20,50)
# ax.set_ylim(7.5,9.0)

#plt.savefig(fig_path + "/growth.pdf", bbox_inches = "tight", dip = 3600)

plt.show()
```

### Growth Rate of Productivity 

```python 
fig, ax = plt.subplots(figsize = (10,7))

ax.plot(df.t, 100*df.g, color = "red", lw = 5,
        label = "Growth Rate", ls = "-")

ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)

ax.set_ylabel("Total Factor Productivity Growth", fontsize = 14) 
# ax.set_xlim(-20,50)
# ax.set_ylim(0.75,1.30)

plt.savefig(fig_path + "/growth.pdf", bbox_inches = "tight", dip = 3600)

plt.show()
```

### Volume of Trade 

```python
fig, ax = plt.subplots(figsize = (10,7))

ax.plot(df.t, 100*(1-df.λ_ii), color = "blue", lw = 5,
        label = "Growth Rate", ls = "-")

ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)

ax.set_ylabel("Imports/GDP", fontsize = 14) 
# ax.set_xlim(-20,50)
# ax.set_ylim(9,15)

plt.savefig(fig_path + "/trade.pdf", bbox_inches = "tight", dip = 3600)

plt.show()
```

### Pi Ratio 

```python 
fig, ax = plt.subplots(figsize = (10,7))

ax.plot(df.t, df.π_rat/df.π_rat.iloc[0], color = "black", lw = 5,
        label = "Growth Rate", ls = "-")

ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)

# ax.set_ylim(0.95,1.30)
# ax.set_xlim(-20,50)

ax.set_ylabel("π ratio \n Normalized, Initial S.S. = 1", fontsize = 14) 

plt.savefig(fig_path + "/pi_ratio.pdf", bbox_inches = "tight", dip = 3600)

plt.show()
```

### Consumption 

```python 
fig, ax = plt.subplots(figsize = (10,7))

ax.plot(df.t, df.c/df.c.iloc[0], color = "black", lw = 5,
        label = "Growth Rate", ls = "-")

ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)

ax.set_ylabel("Consumption \n Normalized, Initial S.S. = 1", fontsize = 14) 

# ax.set_ylim(0.98,1.04)

# ax.set_xlim(-20,50)

plt.savefig(fig_path + "/consumption.pdf", bbox_inches = "tight", dip = 3600)

plt.show()
```

### Domestic Variety 

This one looks a little different with the new parameters. 

```python 
fig, ax = plt.subplots(figsize = (10,7))

ax.plot(df.t, df.Ω/df.Ω.iloc[0], color = "red", lw = 5,
        label = "", ls = "-")

ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)

ax.set_ylabel("Domestic Variety \n Normalized, Initial S.S. = 1", fontsize = 14) 

# ax.set_ylim(0.94,1.04)

# ax.set_xlim(-20,50)

plt.savefig(fig_path + "/omega.pdf", bbox_inches = "tight", dip = 3600)

plt.show()
```

### Reallocation Effects

So this shows the total amount of labor used for fixed costs and then breaks it down. So Adoption and Exporting go up, this is the first line. This is a force to lower consumption. However, entry falls, this is the blue line. The drop in labor going to entry is far larger than the increase initially. So, in total, a bunch of labor is allocated towards consumption amplifying the gains from trade.


```python 
fig, ax = plt.subplots(figsize = (10,7))

ax.plot(df.t, 100*((df.L_tilde_x + df.L_tilde_a) - (df.L_tilde_a.iloc[0] + df.L_tilde_x.iloc[0])), color = "red", lw = 5, ls = "-", alpha = 0.80)

ax.plot(df.t, 100*(df.L_tilde_E - df.L_tilde_E.iloc[0]) , color = "blue", lw = 5, ls = "-", alpha = 0.80)

ax.plot(df.t, 100*(df.L_tilde - df.L_tilde.iloc[0]), color = "black", lw = 5, ls = "--", alpha = 0.70)

ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)

ax.set_ylabel("Labor Outside of Production,\n Percentage Point Change relative to SS", fontsize = 14) 

# ax.set_xlim(-20,50)
# ax.set_ylim(-2.05,2.05)

ax.text(50, 1.15, "Labor used in adoption and exporting", horizontalalignment='right', fontsize = 12) 

ax.text(50, 0.05, "Total labor used for fixed costs", horizontalalignment='right', fontsize = 12) 

ax.text(50, -1.0, "Labor used for entry", horizontalalignment='right', fontsize = 12) 

#plt.savefig(fig_path + "/fixed_costs.pdf", bbox_inches = "tight", dip = 3600)

plt.show()
```

And another plot 

```python
fig, ax = plt.subplots(figsize = (10,7))

#ax.plot(df.t, 100*((df.L_tilde_x) - ( df.L_tilde_x.iloc[0])), color = "red", lw = 5, ls = "-", alpha = 0.80)

ax.plot(df.t, 100*((df.L_tilde_a) - (df.L_tilde_a.iloc[0])), color = "red", lw = 5, ls = "--", alpha = 0.80)

#ax.plot(df.t, 100*(df.L_tilde_E - df.L_tilde_E.iloc[0]) , color = "blue", lw = 5, ls = "-", alpha = 0.80)

#ax.plot(df.t, 100*(df.L_tilde - df.L_tilde.iloc[0]), color = "black", lw = 5, ls = "--", alpha = 0.70)

ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)

ax.set_ylabel("Labor Outside of Production,\n Percentage Point Change relative to SS", fontsize = 14) 

# ax.set_xlim(-20,50)
#ax.set_ylim(-2.05,2.05)

#ax.text(50, 1.15, "Labor used in adoption and exporting", horizontalalignment='right', fontsize = 12) 

#ax.text(50, 0.05, "Total labor used for fixed costs", horizontalalignment='right', fontsize = 12) 

#ax.text(50, -1.0, "Labor used for entry", horizontalalignment='right', fontsize = 12) 

#plt.savefig(fig_path + "/fixed_costs.pdf", bbox_inches = "tight", dip = 3600)

plt.show()
```
